from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from typing import List, Dict

def get_main_menu_keyboard():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    keyboard = [
        [InlineKeyboardButton("üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data='profile')],
        [InlineKeyboardButton("üìù –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç", callback_data='start_test')]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_level_selection_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è"""
    keyboard = [
        [InlineKeyboardButton("üéØ –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è", callback_data='start_test')],
        [InlineKeyboardButton("üìù –í—ã–±—Ä–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ", callback_data='select_level')]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_levels_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É—Ä–æ–≤–Ω—è–º–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ"""
    keyboard = [
        [
            InlineKeyboardButton("A1 (–ù–∞—á–∞–ª—å–Ω—ã–π)", callback_data='level_A1'),
            InlineKeyboardButton("A2 (–≠–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω—ã–π)", callback_data='level_A2')
        ],
        [
            InlineKeyboardButton("B1 (–°—Ä–µ–¥–Ω–∏–π)", callback_data='level_B1'),
            InlineKeyboardButton("B2 (–í—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ)", callback_data='level_B2')
        ],
        [InlineKeyboardButton("C1 (–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π)", callback_data='level_C1')]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_test_answer_keyboard(options: Dict[str, str]) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —Ç–µ—Å—Ç"""
    keyboard = []
    for key, value in options.items():
        keyboard.append([InlineKeyboardButton(f"{key.upper()}) {value}", callback_data=f"test_{key}")])
    return InlineKeyboardMarkup(keyboard)

def get_profile_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è"""
    keyboard = [
        [InlineKeyboardButton("üìä –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å", callback_data="show_progress")],
        [InlineKeyboardButton("üîÑ –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –∑–∞–Ω–æ–≤–æ", callback_data="start_test")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_learning_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ–±—É—á–µ–Ω–∏—è"""
    keyboard = [
        [InlineKeyboardButton("‚ñ∂Ô∏è –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫", callback_data="next_lesson")],
        [InlineKeyboardButton("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É—Ä–æ–∫", callback_data="skip_lesson")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")]
    ]
    return InlineKeyboardMarkup(keyboard) 